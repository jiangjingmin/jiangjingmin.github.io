import{_ as e,r as o,o as c,c as l,a as n,d as p,F as u,e as t,b as s}from"./app.2989aa3c.js";const r={},i=t('<h1 id="\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5" aria-hidden="true">#</a> \u7B97\u6CD5</h1><ol><li>\u6570\u7EC4\u53BB\u91CD</li><li>\u6570\u7EC4\u6392\u5E8F</li><li>\u6570\u7EC4\u6241\u5E73\u5316</li><li>\u6590\u6CE2\u90A3\u5951\u6570\u5217\uFF08\u963F\u91CC\uFF09</li><li>\u8F93\u51FA\u6240\u6709\u548C N \u7684\u8FDE\u7EED\u6B63\u6570\u5E8F\u5217\uFF08\u5934\u6761\uFF09</li><li>\u6700\u5927\u84C4\u6C34\u6C60\u95EE\u9898</li><li>\u627E\u96F6\u95EE\u9898\u3001\u80CC\u5305\u95EE\u9898\u3001\u51F8\u5305\u95EE\u9898</li></ol><h2 id="\u63A8\u8350\u5B66\u4E60" tabindex="-1"><a class="header-anchor" href="#\u63A8\u8350\u5B66\u4E60" aria-hidden="true">#</a> \u63A8\u8350\u5B66\u4E60</h2>',3),k=s("\u5806\u6808\u3001\u961F\u5217\u3001\u94FE\u8868\uFF1A"),b={href:"https://juejin.im/entry/58759e79128fe1006b48cdfd",target:"_blank",rel:"noopener noreferrer"},m=s("https://juejin.im/entry/58759e79128fe1006b48cdfd"),d=s("\u9012\u5F52\uFF1A"),h={href:"https://segmentfault.com/a/1190000009857470",target:"_blank",rel:"noopener noreferrer"},f=s("https://segmentfault.com/a/1190000009857470"),g=s("\u6CE2\u5170\u5F0F\u548C\u9006\u6CE2\u5170\u5F0F-\u7406\u8BBA\uFF1A"),w={href:"http://www.cnblogs.com/chenying99/p/3675876.html",target:"_blank",rel:"noopener noreferrer"},y=s("http://www.cnblogs.com/chenying99/p/3675876.html"),_=s("\u6CE2\u5170\u5F0F\u548C\u9006\u6CE2\u5170\u5F0F-\u6E90\u7801\uFF1A"),j={href:"https://github.com/Tairraos/rpn.js/blob/master/rpn.js",target:"_blank",rel:"noopener noreferrer"},v=s("https://github.com/Tairraos/rpn.js/blob/master/rpn.js"),x=t(`<h2 id="\u4EC0\u4E48\u662F\u54C8\u5E0C\u8868" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F\u54C8\u5E0C\u8868" aria-hidden="true">#</a> \u4EC0\u4E48\u662F\u54C8\u5E0C\u8868\uFF1F</h2><p>\u6563\u5217\u8868\uFF08\u4E5F\u53EB\u54C8\u5E0C\u8868\uFF09\uFF0C\u662F\u6839\u636E\u5173\u952E\u7801\u503C\u76F4\u63A5\u8FDB\u884C\u8BBF\u95EE\u7684\u6570\u636E\u7ED3\u6784\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5B83\u901A\u8FC7\u628A\u5173\u952E\u7801\u503C\u6620\u5C04\u5230\u8868\u4E2D\u4E00\u4E2A\u4F4D\u7F6E\u6765\u8BBF\u95EE\u8BB0\u5F55\uFF0C\u4EE5\u52A0\u5FEB\u67E5\u627E\u7684\u901F\u5EA6\u3002\u8FD9\u4E2A\u6620\u5C04\u51FD\u6570\u53EB\u505A\u6563\u5217\u51FD\u6570\uFF0C\u5B58\u653E\u8BB0\u5F55\u7684\u6570\u7EC4\u53EB\u505A\u6563\u5217\u8868\u3002</p><h2 id="\u5B9E\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B" aria-hidden="true">#</a> \u5B9E\u4F8B</h2><h3 id="\u6570\u7EC4\u53BB\u91CD" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u53BB\u91CD" aria-hidden="true">#</a> \u6570\u7EC4\u53BB\u91CD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/*
 * 1. ES6\uFF1Aset
 * 2. \u5FAA\u73AF\u6BD4\u8F83
 * 3. \u5BF9\u8C61\u952E\u503C\u5BF9
 * 4. \u6BD4\u8F83\u76F8\u90BB\u9879
 */</span>
<span class="token comment">/* \u7B2C\u4E00\u79CD\uFF1AES6: SET */</span>
<span class="token keyword">const</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Array.from(new Set(arr))</span>

<span class="token comment">/* \u7B2C\u4E8C\u79CD\uFF1A\u5F53\u524D\u9879\u4E0E\u540E\u9762\u7684\u5185\u5BB9\u6BD4\u8F83 */</span>
<span class="token comment">// 1. splice\u5220\u9664\u5F53\u524D\u9879\uFF0Ci--\uFF1Bsplice\u4F1A\u6539\u53D8\u539F\u6570\u7EC4\uFF0C\u5B58\u5728\u6570\u7EC4\u584C\u9677\u95EE\u9898</span>
<span class="token comment">// 2. \u5B9A\u4E49\u4E00\u4E2A\u65B0\u6570\u7EC4newArr = [...arr]\uFF0C\u5220\u9664\u65B0\u6570\u7EC4newArr.splice(i, 1);</span>
<span class="token comment">// 3. \u5B9A\u4E49\u4E00\u4E2A\u7A7A\u6570\u7EC4\uFF0Ci&lt;arr.length\uFF0C\u5C06\u4E0D\u5305\u542B\u7684push\u8FDB\u53BB</span>
<span class="token comment">// 4. \u5C06\u5F53\u524D\u9879\u7F6E\u4E3Anull\uFF0C\u6700\u540E\u518D\u628Anull\u5220\u6389\uFF0Carr[i]=null\uFF0Carr = arr.filter(item =&gt; item !== null)</span>
<span class="token comment">// 5. \u5C06\u6700\u540E\u4E00\u9879\u66FF\u6362\u5F53\u524D\u9879arr[i]=arr[arr.length-1]\uFF0C\u5220\u9664\u6700\u540E\u4E00\u9879arr.length--\uFF0C\u8FD8\u4ECE\u5F53\u5F3A\u9879\u5FAA\u73AF\u6BD4\u8F83i--\uFF1B</span>
<span class="token keyword">let</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u6D45\u514B\u9686\uFF0C\u4F46\u6BCF\u4E2A\u6570\u7EC4\u90FD\u662F\u4E00\u4E2A\u5806\uFF0C\u6027\u80FD\u4E0D\u597D</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> item <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>
    args <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u9664\u5F53\u524D\u9879\u7684\u5269\u4F59\u6240\u6709\u9879</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> <span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5224\u65AD\u5728\u5269\u4F59\u6240\u6709\u9879\u4E2D\u662F\u5426\u6709\u5F53\u524D\u9879\uFF0C// ES6: includes</span>
    <span class="token comment">// \u5220\u9664\u5F53\u524D\u9879</span>
    <span class="token comment">/* arr.splice(i, 1); 
        i--;*/</span>
    <span class="token comment">// newArr.splice(i, 1);</span>
    <span class="token comment">// arr[i] = null</span>
    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    arr<span class="token punctuation">.</span>length<span class="token operator">--</span><span class="token punctuation">;</span>
    i<span class="token operator">--</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// newArr.push(item);</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// arr = arr.filter(item =&gt; item !== null)</span>

<span class="token comment">/* \u7B2C\u4E09\u79CD\uFF1A\u5BF9\u8C61\u952E\u503C\u5BF9 */</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> item <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    arr<span class="token punctuation">.</span>length<span class="token operator">--</span><span class="token punctuation">;</span>
    i<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token keyword">continue</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  obj<span class="token punctuation">[</span>item<span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
obj <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// \u6700\u540E\u9500\u6BC1obj\u8FD9\u4E2A\u5806</span>

<span class="token comment">/* \u7B2C\u56DB\u79CD\uFF1A\u5148\u6392\u5E8F\uFF0C\u6BD4\u8F83\u76F8\u90BB\u9879\uFF08\u57FA\u4E8E\u6B63\u5219\uFF09 */</span>
arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
arr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;@&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;@&#39;</span><span class="token punctuation">;</span> <span class="token comment">// \u6BCF\u4E2A\u6570\u5B57\u540E\u9762\u52A0\u4E0A&#39;@&#39;\uFF0C10@10@10@10@10@</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\d+@)\\1*</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span>
  arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
arr<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span> m</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// m\uFF1A\u4E0D\u91CD\u590D\u768410@</span>
  <span class="token comment">// arr.push(Number(m.slice(0, m.length-1)));</span>
  arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">parseFloat</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53EF\u4EE5\u76F4\u63A5\u62FF\u5230\u5B57\u7B26\u4E32\u4E2D\u7684\u6570\u5B57\u90E8\u5206</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><h3 id="\u6570\u7EC4\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u6392\u5E8F" aria-hidden="true">#</a> \u6570\u7EC4\u6392\u5E8F</h3>`,6),A=s("\u5FEB\u901F\u6392\u5E8F\uFF1A"),N={href:"https://segmentfault.com/a/1190000009426421",target:"_blank",rel:"noopener noreferrer"},S=s("https://segmentfault.com/a/1190000009426421"),E=s("\u9009\u62E9\u6392\u5E8F\uFF1A"),V={href:"https://segmentfault.com/a/1190000009366805",target:"_blank",rel:"noopener noreferrer"},B=s("https://segmentfault.com/a/1190000009366805"),F=s("\u5E0C\u5C14\u6392\u5E8F\uFF1A"),I={href:"https://segmentfault.com/a/1190000009461832",target:"_blank",rel:"noopener noreferrer"},T=s("https://segmentfault.com/a/1190000009461832"),q=t(`<p>\u5192\u6CE1\u6392\u5E8F\uFF1A\u4E24\u4E24\u6BD4\u8F83\uFF0C\u5C06\u5C0F\u7684\u653E\u524D\u9762\uFF0C\u5171\u6BD4\u8F83 arr.length-1 \u8F6E\uFF0C\u5927\u7684\u653E\u540E\u9762\uFF0C\u6BCF\u4E00\u8F6E\u5F53\u524D\u9879\u548C\u540E\u4E00\u9879\u6BD4\u8F83\uFF0C\u5F53\u524D\u6570\u7EC4\u4E2D\u6700\u5927\u7684\u653E\u5230\u672B\u5C3E</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">bubble</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> temp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&gt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u63D2\u5165\u6392\u5E8F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> handle <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  handle<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token constant">A</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> handle<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> <span class="token constant">B</span> <span class="token operator">=</span> handle<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">A</span> <span class="token operator">&gt;</span> <span class="token constant">B</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        handle<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        handle<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token constant">A</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u5FEB\u901F\u6392\u5E8F - \u4E8C\u5206\u6CD5\uFF0C\u6027\u80FD\u6700\u597D</p><p>\u53D6\u4E2D\u95F4\u503C\uFF0C\u5206\u4E3A\u5DE6\u5C0F\u53F3\u5927\u4E24\u4E2A\u6570\u7EC4\uFF0C\u9012\u5F52\uFF0C\u518D\u5DE6\u53F3\u62FC\u63A5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">quick</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
  <span class="token comment">// 1. \u627E\u5230\u6570\u7EC4\u7684\u4E2D\u95F4\u9879\uFF0C\u5728\u539F\u6709\u7684\u6570\u7EC4\u4E2D\u628A\u5B83\u79FB\u9664</span>
  <span class="token keyword">let</span> middleIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> middleValue <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>middleIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// 2. \u51C6\u5907\u5DE6\u53F3\u4E24\u4E2A\u6570\u7EC4\uFF0C\u5FAA\u73AF\u5269\u4E0B\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E00\u9879\uFF0C\u6BD4\u5F53\u524D\u9879\u5C0F\u7684\u653E\u5230\u5DE6\u6570\u7EC4\u4E2D\uFF0C\u5927\u7684\u653E\u53F3\u6570\u7EC4\u4E2D</span>
  <span class="token keyword">let</span> leftArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    rightArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> item <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    item <span class="token operator">&lt;</span> middleValue <span class="token operator">?</span> leftArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">:</span> rightArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 3. \u9012\u5F52\u5DE6\u53F3\u6570\u7EC4\uFF0C\u76F4\u5230\u5168\u90E8\u6392\u5B8C\u5E8F\uFF0C\u518D\u5C06\u5DE6+\u4E2D+\u53F3\u62FC\u63A5\u6210\u6700\u540E\u7684\u7ED3\u679C</span>
  <span class="token keyword">return</span> <span class="token function">quick</span><span class="token punctuation">(</span>leftArr<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>middleValue<span class="token punctuation">,</span> <span class="token function">quick</span><span class="token punctuation">(</span>rightArr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="\u6570\u7EC4\u6241\u5E73\u5316" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u6241\u5E73\u5316" aria-hidden="true">#</a> \u6570\u7EC4\u6241\u5E73\u5316</h3><p>\u591A\u7EF4\u6570\u7EC4\u964D\u6210\u4E00\u7EF4\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">/* \u7B2C\u4E00\u79CD\uFF1AES6 */</span>
arr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/* \u7B2C\u4E8C\u79CD\uFF1A\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32 */</span>
arr <span class="token operator">=</span> aa
  <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token function">Number</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
arr <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\[|\\]\\)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token function">Number</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/* \u7B2C\u4E09\u79CD\uFF1A\u57FA\u4E8E\u6570\u7EC4\u7684some\u65B9\u6CD5\uFF1A\u5FAA\u73AF\u9A8C\u8BC1\u662F\u5426\u4E3A\u6570\u7EC4 */</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u964D\u4E00\u7EF4</span>
<span class="token punctuation">}</span>

<span class="token comment">/* \u7B2C\u56DB\u79CD\uFF1A\u9012\u5F52 */</span>
<span class="token keyword">function</span> <span class="token function">myFlat</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">newArr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> newArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> item <span class="token operator">=</span> newArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fn</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">fn</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h3 id="\u6590\u6CE2\u90A3\u5951\u6570\u5217" tabindex="-1"><a class="header-anchor" href="#\u6590\u6CE2\u90A3\u5951\u6570\u5217" aria-hidden="true">#</a> \u6590\u6CE2\u90A3\u5951\u6570\u5217</h3><p>\u6590\u6CE2\u90A3\u5951\u989D\u6570\u5217\u4E3A\uFF1A[1, 1, 2, 3, 5, 8, 13, 21, ...]\u3002\u5F53 index &gt; 1 \u65F6\uFF0C\u5F53\u524D\u9879\u662F\u524D\u4E24\u9879\u4E4B\u548C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span> cur <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> next <span class="token operator">=</span> <span class="token number">1</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> cur<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> next<span class="token punctuation">,</span> cur <span class="token operator">+</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">fibonacci1</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> n <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// \u5373\u5C06\u8981\u521B\u5EFA\u591A\u5C11\u4E2A</span>
    <span class="token function">white</span><span class="token punctuation">(</span><span class="token parameter">i<span class="token operator">&gt;</span><span class="token number">0</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> a <span class="token operator">=</span> arr<span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
         b <span class="token operator">=</span> arr<span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
        i<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="\u8F93\u51FA\u6240\u6709\u548C\u662F-n-\u7684\u8FDE\u7EED\u6B63\u6570\u5E8F\u5217" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA\u6240\u6709\u548C\u662F-n-\u7684\u8FDE\u7EED\u6B63\u6570\u5E8F\u5217" aria-hidden="true">#</a> \u8F93\u51FA\u6240\u6709\u548C\u662F N \u7684\u8FDE\u7EED\u6B63\u6570\u5E8F\u5217</h3><p>\u4F8B\u5982\uFF1A\u8F93\u5165 15\uFF0C\u8FD4\u56DE[[1, 2, 3, 4, 5], [4, 5, 6], [7, 8]]</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4ECEN\u5F00\u59CB\u8BA1\u7B97\u8FDE\u7EEDM\u4E2A\u7684\u6B63\u6570\u5E8F\u5217\u548C - \u7B49\u5DEE\u6570\u5217\u6C42\u548C\uFF08(\u9996+\u5C3E)*\u4E2A\u6570/2\uFF09</span>
<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> middle <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>n<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53EA\u6709\u5C0F\u4E8E\u5F53\u524D\u503C\u7684\u7D2F\u52A0\uFF0C\u624D\u53EF\u80FD\u7B49\u4E8E\u5F53\u524D\u503C</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>middle<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u4ECE1\u5F00\u59CB\u7D2F\u52A0</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u7D2F\u52A0\u591A\u5C11\u6B21</span>
            <span class="token keyword">let</span> total <span class="token operator">=</span> <span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token punctuation">(</span>i<span class="token operator">+</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>j<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// \u7D2F\u52A0\u548C</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>total <span class="token operator">&gt;</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>total <span class="token operator">===</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>
                result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">createArr</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">createArr</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span> len</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> n<span class="token punctuation">;</span>
    arr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>item <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            item <span class="token operator">=</span> temp<span class="token punctuation">[</span>index<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        temp<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> item<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h3 id="\u6700\u5927\u84C4\u6C34\u6C60\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u6700\u5927\u84C4\u6C34\u6C60\u95EE\u9898" aria-hidden="true">#</a> \u6700\u5927\u84C4\u6C34\u6C60\u95EE\u9898</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6682\u65E0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,18);function M(L,O){const a=o("ExternalLinkIcon");return c(),l(u,null,[i,n("ul",null,[n("li",null,[k,n("a",b,[m,p(a)])]),n("li",null,[d,n("a",h,[f,p(a)])]),n("li",null,[g,n("a",w,[y,p(a)])]),n("li",null,[_,n("a",j,[v,p(a)])])]),x,n("ul",null,[n("li",null,[A,n("a",N,[S,p(a)])]),n("li",null,[E,n("a",V,[B,p(a)])]),n("li",null,[F,n("a",I,[T,p(a)])])]),q],64)}var J=e(r,[["render",M],["__file","index.html.vue"]]);export{J as default};
