(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{466:function(a,t,s){"use strict";s.r(t);var r=s(28),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"兔展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#兔展"}},[a._v("#")]),a._v(" 兔展")]),a._v(" "),s("h2",{attrs:{id:"一面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一面"}},[a._v("#")]),a._v(" 一面")]),a._v(" "),s("h3",{attrs:{id:"缓存分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存分类"}},[a._v("#")]),a._v(" 缓存分类")]),a._v(" "),s("h3",{attrs:{id:"前端安全和攻击"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端安全和攻击"}},[a._v("#")]),a._v(" 前端安全和攻击")]),a._v(" "),s("h3",{attrs:{id:"内容安全策略-csp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内容安全策略-csp"}},[a._v("#")]),a._v(" 内容安全策略（CSP）")]),a._v(" "),s("h3",{attrs:{id:"cookie、session-insert-题目没听清楚"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie、session-insert-题目没听清楚"}},[a._v("#")]),a._v(" cookie、session｜insert（题目没听清楚）")]),a._v(" "),s("h3",{attrs:{id:"var-let-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#var-let-区别"}},[a._v("#")]),a._v(" var let 区别")]),a._v(" "),s("h3",{attrs:{id:"有哪几种作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有哪几种作用域"}},[a._v("#")]),a._v(" 有哪几种作用域")]),a._v(" "),s("h3",{attrs:{id:"闭包的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包的理解"}},[a._v("#")]),a._v(" 闭包的理解")]),a._v(" "),s("h3",{attrs:{id:"异步的理解-事件循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步的理解-事件循环"}},[a._v("#")]),a._v(" 异步的理解（事件循环）")]),a._v(" "),s("h3",{attrs:{id:"async-await、promise、generator-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#async-await、promise、generator-的区别"}},[a._v("#")]),a._v(" async/await、Promise、generator 的区别")]),a._v(" "),s("h3",{attrs:{id:"class-的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-的理解"}},[a._v("#")]),a._v(" class 的理解")]),a._v(" "),s("h3",{attrs:{id:"new-的实现机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new-的实现机制"}},[a._v("#")]),a._v(" new 的实现机制")]),a._v(" "),s("h3",{attrs:{id:"webpack-打包原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack-打包原理"}},[a._v("#")]),a._v(" webpack 打包原理")]),a._v(" "),s("h3",{attrs:{id:"首屏渲染优化的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#首屏渲染优化的理解"}},[a._v("#")]),a._v(" 首屏渲染优化的理解")]),a._v(" "),s("h3",{attrs:{id:"seo-有什么理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#seo-有什么理解"}},[a._v("#")]),a._v(" seo 有什么理解")]),a._v(" "),s("h3",{attrs:{id:"服务端渲染的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务端渲染的原理"}},[a._v("#")]),a._v(" 服务端渲染的原理")]),a._v(" "),s("h3",{attrs:{id:"react-某些生命周期被废弃的理由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-某些生命周期被废弃的理由"}},[a._v("#")]),a._v(" react 某些生命周期被废弃的理由")]),a._v(" "),s("h3",{attrs:{id:"fiber-reconciler-和-stack-reconciler-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fiber-reconciler-和-stack-reconciler-的区别"}},[a._v("#")]),a._v(" fiber reconciler 和 stack reconciler 的区别")]),a._v(" "),s("h3",{attrs:{id:"usestate-和-useref-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usestate-和-useref-的区别"}},[a._v("#")]),a._v(" useState 和 useRef 的区别")]),a._v(" "),s("h3",{attrs:{id:"hooks如何清除副作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hooks如何清除副作用"}},[a._v("#")]),a._v(" hooks如何清除副作用")]),a._v(" "),s("h2",{attrs:{id:"二面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二面"}},[a._v("#")]),a._v(" 二面")]),a._v(" "),s("h3",{attrs:{id:"fiber-架构是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fiber-架构是什么"}},[a._v("#")]),a._v(" fiber 架构是什么")]),a._v(" "),s("h3",{attrs:{id:"diff-算法实现思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff-算法实现思路"}},[a._v("#")]),a._v(" diff 算法实现思路")]),a._v(" "),s("h3",{attrs:{id:"key-在-diff-算法中的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#key-在-diff-算法中的作用"}},[a._v("#")]),a._v(" key 在 diff 算法中的作用")]),a._v(" "),s("h3",{attrs:{id:"diff-算法时间复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff-算法时间复杂度"}},[a._v("#")]),a._v(" diff 算法时间复杂度")]),a._v(" "),s("h3",{attrs:{id:"diff-为什么这么高"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff-为什么这么高"}},[a._v("#")]),a._v(" diff 为什么这么高")]),a._v(" "),s("h3",{attrs:{id:"fiber-节点是一个什么数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fiber-节点是一个什么数据结构"}},[a._v("#")]),a._v(" fiber 节点是一个什么数据结构")]),a._v(" "),s("h3",{attrs:{id:"开发组件基于什么原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发组件基于什么原则"}},[a._v("#")]),a._v(" 开发组件基于什么原则")]),a._v(" "),s("h3",{attrs:{id:"迁移-ts-的过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#迁移-ts-的过程"}},[a._v("#")]),a._v(" 迁移 ts 的过程")]),a._v(" "),s("h3",{attrs:{id:"迁移过程中遇到的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#迁移过程中遇到的问题"}},[a._v("#")]),a._v(" 迁移过程中遇到的问题")]),a._v(" "),s("h3",{attrs:{id:"ts-的-type-和-interface-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ts-的-type-和-interface-的区别"}},[a._v("#")]),a._v(" ts 的 type 和 interface 的区别")]),a._v(" "),s("h3",{attrs:{id:"ts-里面如何声明函数的重载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ts-里面如何声明函数的重载"}},[a._v("#")]),a._v(" ts 里面如何声明函数的重载")]),a._v(" "),s("h3",{attrs:{id:"ts-元组和数组的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ts-元组和数组的区别"}},[a._v("#")]),a._v(" ts 元组和数组的区别")]),a._v(" "),s("h3",{attrs:{id:"ts-元组的使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ts-元组的使用场景"}},[a._v("#")]),a._v(" ts 元组的使用场景")]),a._v(" "),s("h3",{attrs:{id:"esm-和-cjs-的模块化的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#esm-和-cjs-的模块化的区别"}},[a._v("#")]),a._v(" esm 和 cjs 的模块化的区别")]),a._v(" "),s("h3",{attrs:{id:"pc-端上常见的性能优化手段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pc-端上常见的性能优化手段"}},[a._v("#")]),a._v(" pc 端上常见的性能优化手段")]),a._v(" "),s("h3",{attrs:{id:"http-缓存机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-缓存机制"}},[a._v("#")]),a._v(" HTTP 缓存机制")])])}),[],!1,null,null,null);t.default=e.exports}}]);