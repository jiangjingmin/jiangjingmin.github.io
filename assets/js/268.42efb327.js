(window.webpackJsonp=window.webpackJsonp||[]).push([[268],{673:function(t,a,s){"use strict";s.r(a);var r=s(28),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"高频考点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高频考点"}},[t._v("#")]),t._v(" 高频考点")]),t._v(" "),s("h2",{attrs:{id:"_1-typeof类型判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-typeof类型判断"}},[t._v("#")]),t._v(" 1 typeof类型判断")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("typeof")]),t._v(" 是否能正确判断类型？"),s("code",[t._v("instanceof")]),t._v(" 能正确判断对象的原理是什么")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("typeof")]),t._v(" 对于原始类型来说，除了 "),s("code",[t._v("null")]),t._v(" 都可以显示正确的类型")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'number'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'string'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'undefined'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'boolean'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'symbol'")]),t._v("\n")])])]),s("blockquote",[s("p",[s("code",[t._v("typeof")]),t._v(" 对于对象来说，除了函数都会显示 "),s("code",[t._v("object")]),t._v("，所以说 "),s("code",[t._v("typeof")]),t._v(" 并不能准确判断变量到底是什么类型")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'object'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'object'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'function'")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("如果我们想判断一个对象的正确类型，这时候可以考虑使用 "),s("code",[t._v("instanceof")]),t._v("，因为内部机制是通过原型链来判断的")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Person")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" p1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\np1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),t._v("\nstr "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstr1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("对于原始类型来说，你想直接通过 "),s("code",[t._v("instanceof")]),t._v("来判断类型是不行的")])]),t._v(" "),s("h2",{attrs:{id:"_2-类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-类型转换"}},[t._v("#")]),t._v(" 2 类型转换")]),t._v(" "),s("blockquote",[s("p",[t._v("首先我们要知道，在 "),s("code",[t._v("JS")]),t._v(" 中类型转换只有三种情况，分别是：")])]),t._v(" "),s("ul",[s("li",[t._v("转换为布尔值")]),t._v(" "),s("li",[t._v("转换为数字")]),t._v(" "),s("li",[t._v("转换为字符串")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2020/07/1.png",alt:"img"}})]),t._v(" "),s("p",[s("strong",[t._v("转Boolean")])]),t._v(" "),s("blockquote",[s("p",[t._v("在条件判断时，除了 "),s("code",[t._v("undefined")]),t._v("，"),s("code",[t._v("null")]),t._v("， "),s("code",[t._v("false")]),t._v("， "),s("code",[t._v("NaN")]),t._v("， "),s("code",[t._v("''")]),t._v("， "),s("code",[t._v("0")]),t._v("， "),s("code",[t._v("-0")]),t._v("，其他所有值都转为 "),s("code",[t._v("true")]),t._v("，包括所有对象")])]),t._v(" "),s("p",[s("strong",[t._v("对象转原始类型")])]),t._v(" "),s("blockquote",[s("p",[t._v("对象在转换类型的时候，会调用内置的 "),s("code",[t._v("[[ToPrimitive]]")]),t._v(" 函数，对于该函数来说，算法逻辑一般来说如下")])]),t._v(" "),s("ul",[s("li",[t._v("如果已经是原始类型了，那就不需要转换了")]),t._v(" "),s("li",[t._v("调用 "),s("code",[t._v("x.valueOf()")]),t._v("，如果转换为基础类型，就返回转换的值")]),t._v(" "),s("li",[t._v("调用 "),s("code",[t._v("x.toString()")]),t._v("，如果转换为基础类型，就返回转换的值")]),t._v(" "),s("li",[t._v("如果都没有返回原始类型，就会报错")])]),t._v(" "),s("blockquote",[s("p",[t._v("当然你也可以重写 "),s("code",[t._v("Symbol.toPrimitive")]),t._v("，该方法在转原始类型时调用优先级最高。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toPrimitive"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 3")]),t._v("\n")])])]),s("p",[s("strong",[t._v("四则运算符")])]),t._v(" "),s("blockquote",[s("p",[t._v("它有以下几个特点：")])]),t._v(" "),s("ul",[s("li",[t._v("运算中其中一方为字符串，那么就会把另一方也转换为字符串")]),t._v(" "),s("li",[t._v("如果一方不是字符串或者数字，那么会将它转换为数字或者字符串")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '11'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "41,2,3"')]),t._v("\n")])])]),s("ul",[s("li",[t._v("对于第一行代码来说，触发特点一，所以将数字 "),s("code",[t._v("1")]),t._v(" 转换为字符串，得到结果 "),s("code",[t._v("'11'")])]),t._v(" "),s("li",[t._v("对于第二行代码来说，触发特点二，所以将 "),s("code",[t._v("true")]),t._v(" 转为数字 "),s("code",[t._v("1")])]),t._v(" "),s("li",[t._v("对于第三行代码来说，触发特点二，所以将数组通过 "),s("code",[t._v("toString")]),t._v("转为字符串 "),s("code",[t._v("1,2,3")]),t._v("，得到结果 "),s("code",[t._v("41,2,3")])])]),t._v(" "),s("blockquote",[s("p",[t._v("另外对于加法还需要注意这个表达式 "),s("code",[t._v("'a' + + 'b'")])])]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("'a' + + 'b' // -> \"aNaN\"\n")])])]),s("ul",[s("li",[t._v("因为 "),s("code",[t._v("+ 'b'")]),t._v(" 等于 "),s("code",[t._v("NaN")]),t._v("，所以结果为 "),s("code",[t._v('"aNaN"')]),t._v("，你可能也会在一些代码中看到过 "),s("code",[t._v("+ '1'")]),t._v("的形式来快速获取 "),s("code",[t._v("number")]),t._v(" 类型。")]),t._v(" "),s("li",[t._v("那么对于除了加法的运算符来说，只要其中一方是数字，那么另一方就会被转为数字")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 12")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n")])])]),s("p",[s("strong",[t._v("比较运算符")])]),t._v(" "),s("ul",[s("li",[t._v("如果是对象，就通过 "),s("code",[t._v("toPrimitive")]),t._v(" 转换对象")]),t._v(" "),s("li",[t._v("如果是字符串，就通过 "),s("code",[t._v("unicode")]),t._v(" 字符索引来比较")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("在以上代码中，因为 "),s("code",[t._v("a")]),t._v(" 是对象，所以会通过 "),s("code",[t._v("valueOf")]),t._v(" 转换为原始类型再比较值。")])]),t._v(" "),s("h2",{attrs:{id:"_3-this"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-this"}},[t._v("#")]),t._v(" 3 This")]),t._v(" "),s("blockquote",[s("p",[t._v("我们先来看几个函数调用的场景")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  foo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" foo\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nobj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("对于直接调用 "),s("code",[t._v("foo")]),t._v(" 来说，不管 "),s("code",[t._v("foo")]),t._v(" 函数被放在了什么地方，"),s("code",[t._v("this")]),t._v(" 一定是"),s("code",[t._v("window")])]),t._v(" "),s("li",[t._v("对于 "),s("code",[t._v("obj.foo()")]),t._v(" 来说，我们只需要记住，谁调用了函数，谁就是 "),s("code",[t._v("this")]),t._v("，所以在这个场景下 "),s("code",[t._v("foo")]),t._v(" 函数中的 "),s("code",[t._v("this")]),t._v(" 就是 "),s("code",[t._v("obj")]),t._v(" 对象")]),t._v(" "),s("li",[t._v("对于 "),s("code",[t._v("new")]),t._v(" 的方式来说，"),s("code",[t._v("this")]),t._v(" 被永远绑定在了 "),s("code",[t._v("c")]),t._v(" 上面，不会被任何方式改变 "),s("code",[t._v("this")])])]),t._v(" "),s("blockquote",[s("p",[t._v("说完了以上几种情况，其实很多代码中的 "),s("code",[t._v("this")]),t._v(" 应该就没什么问题了，下面让我们看看箭头函数中的 "),s("code",[t._v("this")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("首先箭头函数其实是没有 "),s("code",[t._v("this")]),t._v(" 的，箭头函数中的 "),s("code",[t._v("this")]),t._v(" 只取决包裹箭头函数的第一个普通函数的 "),s("code",[t._v("this")]),t._v("。在这个例子中，因为包裹箭头函数的第一个普通函数是 "),s("code",[t._v("a")]),t._v("，所以此时的 "),s("code",[t._v("this")]),t._v(" 是 "),s("code",[t._v("window")]),t._v("。另外对箭头函数使用 "),s("code",[t._v("bind")]),t._v("这类函数是无效的。")]),t._v(" "),s("li",[t._v("最后种情况也就是 "),s("code",[t._v("bind")]),t._v(" 这些改变上下文的 "),s("code",[t._v("API")]),t._v(" 了，对于这些函数来说，"),s("code",[t._v("this")]),t._v(" 取决于第一个参数，如果第一个参数为空，那么就是 "),s("code",[t._v("window")]),t._v("。")]),t._v(" "),s("li",[t._v("那么说到 "),s("code",[t._v("bind")]),t._v("，不知道大家是否考虑过，如果对一个函数进行多次 "),s("code",[t._v("bind")]),t._v("，那么上下文会是什么呢？")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => ?")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("如果你认为输出结果是 "),s("code",[t._v("a")]),t._v("，那么你就错了，其实我们可以把上述代码转换成另一种形式")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fn.bind().bind(a) 等于")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("可以从上述代码中发现，不管我们给函数 "),s("code",[t._v("bind")]),t._v(" 几次，"),s("code",[t._v("fn")]),t._v(" 中的 "),s("code",[t._v("this")]),t._v(" 永远由第一次 "),s("code",[t._v("bind")]),t._v(" 决定，所以结果永远是 "),s("code",[t._v("window")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'poetries'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 'poetries'")]),t._v("\n")])])]),s("h2",{attrs:{id:"_4-和-有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-和-有什么区别"}},[t._v("#")]),t._v(" 4 == 和 === 有什么区别")]),t._v(" "),s("h2",{attrs:{id:"_5-闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-闭包"}},[t._v("#")]),t._v(" 5 闭包")]),t._v(" "),s("h2",{attrs:{id:"_6-深浅拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-深浅拷贝"}},[t._v("#")]),t._v(" 6 深浅拷贝")]),t._v(" "),s("h2",{attrs:{id:"_7-原型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-原型"}},[t._v("#")]),t._v(" 7 原型")]),t._v(" "),s("h2",{attrs:{id:"_8-var、let-及-const-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-var、let-及-const-区别"}},[t._v("#")]),t._v(" 8 var、let 及 const 区别")]),t._v(" "),s("h2",{attrs:{id:"_9-原型继承和-class-继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-原型继承和-class-继承"}},[t._v("#")]),t._v(" 9 原型继承和 Class 继承")]),t._v(" "),s("h2",{attrs:{id:"_10-模块化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-模块化"}},[t._v("#")]),t._v(" 10 模块化")]),t._v(" "),s("h2",{attrs:{id:"_11-实现一个简洁版的promise"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-实现一个简洁版的promise"}},[t._v("#")]),t._v(" 11 实现一个简洁版的promise")]),t._v(" "),s("h2",{attrs:{id:"_12-event-loop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-event-loop"}},[t._v("#")]),t._v(" 12 Event Loop")]),t._v(" "),s("h3",{attrs:{id:"_12-1-进程与线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-进程与线程"}},[t._v("#")]),t._v(" 12.1 进程与线程")]),t._v(" "),s("h3",{attrs:{id:"_12-2-执行栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-执行栈"}},[t._v("#")]),t._v(" 12.2 执行栈")]),t._v(" "),s("h3",{attrs:{id:"_12-3-浏览器中的-event-loop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-3-浏览器中的-event-loop"}},[t._v("#")]),t._v(" 12.3 浏览器中的 Event Loop")]),t._v(" "),s("h3",{attrs:{id:"_12-4-node-中的-event-loop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-4-node-中的-event-loop"}},[t._v("#")]),t._v(" 12.4 Node 中的 Event loop")]),t._v(" "),s("h2",{attrs:{id:"_13-手写-call、apply-及-bind-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-手写-call、apply-及-bind-函数"}},[t._v("#")]),t._v(" 13 手写 call、apply 及 bind 函数")]),t._v(" "),s("h2",{attrs:{id:"_14-new"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-new"}},[t._v("#")]),t._v(" 14 new")]),t._v(" "),s("h2",{attrs:{id:"_15-instanceof-的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-instanceof-的原理"}},[t._v("#")]),t._v(" 15 instanceof 的原理")]),t._v(" "),s("h2",{attrs:{id:"_16-为什么-0-1-0-2-0-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-为什么-0-1-0-2-0-3"}},[t._v("#")]),t._v(" 16 为什么 0.1 + 0.2 != 0.3")]),t._v(" "),s("h2",{attrs:{id:"_17-事件机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-事件机制"}},[t._v("#")]),t._v(" 17 事件机制")]),t._v(" "),s("h3",{attrs:{id:"_17-1-事件触发三阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-1-事件触发三阶段"}},[t._v("#")]),t._v(" 17.1 事件触发三阶段")]),t._v(" "),s("h3",{attrs:{id:"_17-2-注册事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-2-注册事件"}},[t._v("#")]),t._v(" 17.2 注册事件")]),t._v(" "),s("h3",{attrs:{id:"_17-3-事件代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-3-事件代理"}},[t._v("#")]),t._v(" 17.3 事件代理")]),t._v(" "),s("h2",{attrs:{id:"_18-跨域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-跨域"}},[t._v("#")]),t._v(" 18 跨域")]),t._v(" "),s("h3",{attrs:{id:"_18-1-jsonp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-1-jsonp"}},[t._v("#")]),t._v(" 18.1 JSONP")]),t._v(" "),s("h3",{attrs:{id:"_18-2-cors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-2-cors"}},[t._v("#")]),t._v(" 18.2 CORS")]),t._v(" "),s("h3",{attrs:{id:"_18-3-document-domain"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-3-document-domain"}},[t._v("#")]),t._v(" 18.3 document.domain")]),t._v(" "),s("h3",{attrs:{id:"_18-4-postmessage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-4-postmessage"}},[t._v("#")]),t._v(" 18.4 postMessage")]),t._v(" "),s("h2",{attrs:{id:"_19-存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-存储"}},[t._v("#")]),t._v(" 19 存储")]),t._v(" "),s("h2",{attrs:{id:"_20-浏览器缓存机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-浏览器缓存机制"}},[t._v("#")]),t._v(" 20 浏览器缓存机制")]),t._v(" "),s("h3",{attrs:{id:"_20-1-缓存位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-1-缓存位置"}},[t._v("#")]),t._v(" 20.1 缓存位置")]),t._v(" "),s("h3",{attrs:{id:"_20-2-缓存策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-2-缓存策略"}},[t._v("#")]),t._v(" 20.2 缓存策略")]),t._v(" "),s("h3",{attrs:{id:"_20-2-1-强缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-2-1-强缓存"}},[t._v("#")]),t._v(" 20.2.1 强缓存")]),t._v(" "),s("h3",{attrs:{id:"_20-2-2-协商缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-2-2-协商缓存"}},[t._v("#")]),t._v(" 20.2.2 协商缓存")]),t._v(" "),s("h3",{attrs:{id:"_20-3-实际场景应用缓存策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-3-实际场景应用缓存策略"}},[t._v("#")]),t._v(" 20.3 实际场景应用缓存策略")]),t._v(" "),s("h2",{attrs:{id:"_21-浏览器渲染原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-浏览器渲染原理"}},[t._v("#")]),t._v(" 21 浏览器渲染原理")]),t._v(" "),s("h3",{attrs:{id:"_21-1-渲染过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-1-渲染过程"}},[t._v("#")]),t._v(" 21.1 渲染过程")]),t._v(" "),s("h3",{attrs:{id:"_21-2-为什么操作-dom-慢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-2-为什么操作-dom-慢"}},[t._v("#")]),t._v(" 21.2 为什么操作 DOM 慢")]),t._v(" "),s("h3",{attrs:{id:"_21-3-什么情况阻塞渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-3-什么情况阻塞渲染"}},[t._v("#")]),t._v(" 21.3 什么情况阻塞渲染")]),t._v(" "),s("h3",{attrs:{id:"_21-4-重绘-repaint-和回流-reflow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-4-重绘-repaint-和回流-reflow"}},[t._v("#")]),t._v(" 21.4 重绘（Repaint）和回流（Reflow）")]),t._v(" "),s("h3",{attrs:{id:"_21-5-减少重绘和回流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-5-减少重绘和回流"}},[t._v("#")]),t._v(" 21.5 减少重绘和回流")]),t._v(" "),s("h2",{attrs:{id:"_22-安全防范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-安全防范"}},[t._v("#")]),t._v(" 22 安全防范")]),t._v(" "),s("h3",{attrs:{id:"_22-1-xss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-1-xss"}},[t._v("#")]),t._v(" 22.1 XSS")]),t._v(" "),s("h3",{attrs:{id:"_22-2-csrf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-2-csrf"}},[t._v("#")]),t._v(" 22.2 CSRF")]),t._v(" "),s("h3",{attrs:{id:"_22-3-点击劫持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-3-点击劫持"}},[t._v("#")]),t._v(" 22.3 点击劫持")]),t._v(" "),s("h2",{attrs:{id:"_23-从-v8-中看-js-性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-从-v8-中看-js-性能优化"}},[t._v("#")]),t._v(" 23 从 V8 中看 JS 性能优化")]),t._v(" "),s("h3",{attrs:{id:"_23-1-测试性能工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-1-测试性能工具"}},[t._v("#")]),t._v(" 23.1 测试性能工具")]),t._v(" "),s("h3",{attrs:{id:"_23-2-js-性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-2-js-性能优化"}},[t._v("#")]),t._v(" 23.2 JS 性能优化")]),t._v(" "),s("h2",{attrs:{id:"_24-性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-性能优化"}},[t._v("#")]),t._v(" 24 性能优化")]),t._v(" "),s("h3",{attrs:{id:"_24-1-图片优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-1-图片优化"}},[t._v("#")]),t._v(" 24.1 图片优化")]),t._v(" "),s("h3",{attrs:{id:"_24-2-图片加载优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-2-图片加载优化"}},[t._v("#")]),t._v(" 24.2 图片加载优化")]),t._v(" "),s("h3",{attrs:{id:"_24-3-dns-预解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-3-dns-预解析"}},[t._v("#")]),t._v(" 24.3 DNS 预解析")]),t._v(" "),s("h3",{attrs:{id:"_24-4-节流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-4-节流"}},[t._v("#")]),t._v(" 24.4 节流")]),t._v(" "),s("h3",{attrs:{id:"_24-5-防抖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-5-防抖"}},[t._v("#")]),t._v(" 24.5 防抖")]),t._v(" "),s("h3",{attrs:{id:"_24-6-预加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-6-预加载"}},[t._v("#")]),t._v(" 24.6 预加载")]),t._v(" "),s("h3",{attrs:{id:"_24-7-预渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-7-预渲染"}},[t._v("#")]),t._v(" 24.7 预渲染")]),t._v(" "),s("h3",{attrs:{id:"_24-8-懒执行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-8-懒执行"}},[t._v("#")]),t._v(" 24.8 懒执行")]),t._v(" "),s("h3",{attrs:{id:"_24-9-懒加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-9-懒加载"}},[t._v("#")]),t._v(" 24.9 懒加载")]),t._v(" "),s("h3",{attrs:{id:"_24-10-cdn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-10-cdn"}},[t._v("#")]),t._v(" 24.10 CDN")]),t._v(" "),s("h2",{attrs:{id:"_25-webpack-性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25-webpack-性能优化"}},[t._v("#")]),t._v(" 25 Webpack 性能优化")]),t._v(" "),s("h3",{attrs:{id:"_25-1-减少-webpack-打包时间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25-1-减少-webpack-打包时间"}},[t._v("#")]),t._v(" 25.1 减少 Webpack 打包时间")]),t._v(" "),s("h3",{attrs:{id:"_25-2-减少-webpack-打包后的文件体积"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25-2-减少-webpack-打包后的文件体积"}},[t._v("#")]),t._v(" 25.2 减少 Webpack 打包后的文件体积")]),t._v(" "),s("h2",{attrs:{id:"_26-实现小型打包工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_26-实现小型打包工具"}},[t._v("#")]),t._v(" 26 实现小型打包工具")]),t._v(" "),s("h2",{attrs:{id:"_27-mvvm-虚拟dom-前端路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-mvvm-虚拟dom-前端路由"}},[t._v("#")]),t._v(" 27 MVVM/虚拟DOM/前端路由")]),t._v(" "),s("h3",{attrs:{id:"_27-1-mvvm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-1-mvvm"}},[t._v("#")]),t._v(" 27.1 MVVM")]),t._v(" "),s("h3",{attrs:{id:"_27-2-virtual-dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-2-virtual-dom"}},[t._v("#")]),t._v(" 27.2 Virtual DOM")]),t._v(" "),s("h3",{attrs:{id:"_27-3-路由原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-3-路由原理"}},[t._v("#")]),t._v(" 27.3 路由原理")]),t._v(" "),s("h3",{attrs:{id:"_27-4-vue-和-react-之间的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-4-vue-和-react-之间的区别"}},[t._v("#")]),t._v(" 27.4 Vue 和 React 之间的区别")]),t._v(" "),s("h2",{attrs:{id:"_28-vue常考知识点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-vue常考知识点"}},[t._v("#")]),t._v(" 28 Vue常考知识点")]),t._v(" "),s("h3",{attrs:{id:"_28-1-生命周期钩子函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-1-生命周期钩子函数"}},[t._v("#")]),t._v(" 28.1 生命周期钩子函数")]),t._v(" "),s("h3",{attrs:{id:"_28-2-组件通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-2-组件通信"}},[t._v("#")]),t._v(" 28.2 组件通信")]),t._v(" "),s("h3",{attrs:{id:"_28-3-extend-能做什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-3-extend-能做什么"}},[t._v("#")]),t._v(" 28.3 extend 能做什么")]),t._v(" "),s("h3",{attrs:{id:"_28-4-mixin-和-mixins-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-4-mixin-和-mixins-区别"}},[t._v("#")]),t._v(" 28.4 mixin 和 mixins 区别")]),t._v(" "),s("h3",{attrs:{id:"_28-5-computed-和-watch-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-5-computed-和-watch-区别"}},[t._v("#")]),t._v(" 28.5 computed 和 watch 区别")]),t._v(" "),s("h3",{attrs:{id:"_28-6-keep-alive-组件有什么作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-6-keep-alive-组件有什么作用"}},[t._v("#")]),t._v(" 28.6 keep-alive 组件有什么作用")]),t._v(" "),s("h3",{attrs:{id:"_28-7-v-show-与-v-if-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-7-v-show-与-v-if-区别"}},[t._v("#")]),t._v(" 28.7 v-show 与 v-if 区别")]),t._v(" "),s("h3",{attrs:{id:"_28-8-组件中-data-什么时候可以使用对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-8-组件中-data-什么时候可以使用对象"}},[t._v("#")]),t._v(" 28.8 组件中 data 什么时候可以使用对象")]),t._v(" "),s("h3",{attrs:{id:"_28-9-响应式原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-9-响应式原理"}},[t._v("#")]),t._v(" 28.9 响应式原理")]),t._v(" "),s("h4",{attrs:{id:"_28-9-1-object-defineproperty-的缺陷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-9-1-object-defineproperty-的缺陷"}},[t._v("#")]),t._v(" 28.9.1 Object.defineProperty 的缺陷")]),t._v(" "),s("h4",{attrs:{id:"_28-9-2-编译过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-9-2-编译过程"}},[t._v("#")]),t._v(" 28.9.2 编译过程")]),t._v(" "),s("h4",{attrs:{id:"_28-9-3-nexttick-原理分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-9-3-nexttick-原理分析"}},[t._v("#")]),t._v(" 28.9.3 NextTick 原理分析")]),t._v(" "),s("h2",{attrs:{id:"_29-react常考知识点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-react常考知识点"}},[t._v("#")]),t._v(" 29 React常考知识点")]),t._v(" "),s("h3",{attrs:{id:"_29-1-生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-1-生命周期"}},[t._v("#")]),t._v(" 29.1 生命周期")]),t._v(" "),s("h3",{attrs:{id:"_29-2-setstate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-2-setstate"}},[t._v("#")]),t._v(" 29.2 setState")]),t._v(" "),s("h3",{attrs:{id:"_29-3-性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-3-性能优化"}},[t._v("#")]),t._v(" 29.3 性能优化")]),t._v(" "),s("h3",{attrs:{id:"_29-4-通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-4-通信"}},[t._v("#")]),t._v(" 29.4 通信")]),t._v(" "),s("h3",{attrs:{id:"_29-5-hoc-是什么-相比-mixins-有什么优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-5-hoc-是什么-相比-mixins-有什么优点"}},[t._v("#")]),t._v(" 29.5 HOC 是什么？相比 mixins 有什么优点？")]),t._v(" "),s("h3",{attrs:{id:"_29-6-事件机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-6-事件机制"}},[t._v("#")]),t._v(" 29.6 事件机制")]),t._v(" "),s("h2",{attrs:{id:"_30-监控"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_30-监控"}},[t._v("#")]),t._v(" 30 监控")]),t._v(" "),s("h2",{attrs:{id:"_30-1-页面埋点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_30-1-页面埋点"}},[t._v("#")]),t._v(" 30.1 页面埋点")]),t._v(" "),s("h2",{attrs:{id:"_30-2-性能监控"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_30-2-性能监控"}},[t._v("#")]),t._v(" 30.2 性能监控")]),t._v(" "),s("h2",{attrs:{id:"_30-3-异常监控"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_30-3-异常监控"}},[t._v("#")]),t._v(" 30.3 异常监控")]),t._v(" "),s("h2",{attrs:{id:"_31-tcp-udp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_31-tcp-udp"}},[t._v("#")]),t._v(" 31 TCP/UDP")]),t._v(" "),s("h3",{attrs:{id:"_31-1-udp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_31-1-udp"}},[t._v("#")]),t._v(" 31.1 UDP")]),t._v(" "),s("h3",{attrs:{id:"_31-2-tcp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_31-2-tcp"}},[t._v("#")]),t._v(" 31.2 TCP")]),t._v(" "),s("h2",{attrs:{id:"_32-http-tls"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_32-http-tls"}},[t._v("#")]),t._v(" 32 HTTP/TLS")]),t._v(" "),s("h3",{attrs:{id:"_32-1-http-请求中的内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_32-1-http-请求中的内容"}},[t._v("#")]),t._v(" 32.1 HTTP 请求中的内容")]),t._v(" "),s("h3",{attrs:{id:"_32-2-tls"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_32-2-tls"}},[t._v("#")]),t._v(" 32.2 TLS")]),t._v(" "),s("h2",{attrs:{id:"_33-http2-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-http2-0"}},[t._v("#")]),t._v(" 33 HTTP2.0")]),t._v(" "),s("h3",{attrs:{id:"_33-1-http-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-1-http-2"}},[t._v("#")]),t._v(" 33.1 HTTP/2")]),t._v(" "),s("h3",{attrs:{id:"_33-2-二进制传输"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-2-二进制传输"}},[t._v("#")]),t._v(" 33.2 二进制传输")]),t._v(" "),s("h3",{attrs:{id:"_33-3-多路复用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-3-多路复用"}},[t._v("#")]),t._v(" 33.3 多路复用")]),t._v(" "),s("h3",{attrs:{id:"_33-4-header-压缩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-4-header-压缩"}},[t._v("#")]),t._v(" 33.4 Header 压缩")]),t._v(" "),s("h3",{attrs:{id:"_33-5-服务端-push"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-5-服务端-push"}},[t._v("#")]),t._v(" 33.5 服务端 Push")]),t._v(" "),s("h3",{attrs:{id:"_33-6-http-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-6-http-3"}},[t._v("#")]),t._v(" 33.6 HTTP/3")]),t._v(" "),s("h2",{attrs:{id:"_34-设计模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_34-设计模式"}},[t._v("#")]),t._v(" 34 设计模式")]),t._v(" "),s("h3",{attrs:{id:"_34-1-工厂模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_34-1-工厂模式"}},[t._v("#")]),t._v(" 34.1 工厂模式")]),t._v(" "),s("h3",{attrs:{id:"_34-2-单例模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_34-2-单例模式"}},[t._v("#")]),t._v(" 34.2 单例模式")]),t._v(" "),s("h3",{attrs:{id:"_34-3-适配器模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_34-3-适配器模式"}},[t._v("#")]),t._v(" 34.3 适配器模式")]),t._v(" "),s("h3",{attrs:{id:"_34-4-装饰模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_34-4-装饰模式"}},[t._v("#")]),t._v(" 34.4 装饰模式")]),t._v(" "),s("h3",{attrs:{id:"_34-5-代理模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_34-5-代理模式"}},[t._v("#")]),t._v(" 34.5 代理模式")]),t._v(" "),s("h3",{attrs:{id:"_34-6-发布-订阅模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_34-6-发布-订阅模式"}},[t._v("#")]),t._v(" 34.6 发布-订阅模式")]),t._v(" "),s("h3",{attrs:{id:"_34-7-外观模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_34-7-外观模式"}},[t._v("#")]),t._v(" 34.7 外观模式")]),t._v(" "),s("h2",{attrs:{id:"_35-常见数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_35-常见数据结构"}},[t._v("#")]),t._v(" 35 常见数据结构")]),t._v(" "),s("h3",{attrs:{id:"_35-1-时间复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_35-1-时间复杂度"}},[t._v("#")]),t._v(" 35.1 时间复杂度")]),t._v(" "),s("h3",{attrs:{id:"_35-2-栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_35-2-栈"}},[t._v("#")]),t._v(" 35.2 栈")]),t._v(" "),s("h3",{attrs:{id:"_35-3-应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_35-3-应用"}},[t._v("#")]),t._v(" 35.3 应用")]),t._v(" "),s("h3",{attrs:{id:"_35-4-队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_35-4-队列"}},[t._v("#")]),t._v(" 35.4 队列")]),t._v(" "),s("h3",{attrs:{id:"_35-5-链表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_35-5-链表"}},[t._v("#")]),t._v(" 35.5 链表")]),t._v(" "),s("h3",{attrs:{id:"_35-6-树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_35-6-树"}},[t._v("#")]),t._v(" 35.6 树")]),t._v(" "),s("h3",{attrs:{id:"_35-7-avl-树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_35-7-avl-树"}},[t._v("#")]),t._v(" 35.7 AVL 树")]),t._v(" "),s("h3",{attrs:{id:"_35-8-trie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_35-8-trie"}},[t._v("#")]),t._v(" 35.8 Trie")]),t._v(" "),s("h3",{attrs:{id:"_35-9-并查集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_35-9-并查集"}},[t._v("#")]),t._v(" 35.9 并查集")]),t._v(" "),s("h3",{attrs:{id:"_35-10-堆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_35-10-堆"}},[t._v("#")]),t._v(" 35.10 堆")]),t._v(" "),s("h2",{attrs:{id:"_36-常考算法题解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_36-常考算法题解析"}},[t._v("#")]),t._v(" 36 常考算法题解析")]),t._v(" "),s("h3",{attrs:{id:"_36-1-位运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_36-1-位运算"}},[t._v("#")]),t._v(" 36.1 位运算")]),t._v(" "),s("h3",{attrs:{id:"_36-2-排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_36-2-排序"}},[t._v("#")]),t._v(" 36.2 排序")]),t._v(" "),s("h4",{attrs:{id:"_36-2-1-冒泡排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_36-2-1-冒泡排序"}},[t._v("#")]),t._v(" 36.2.1 冒泡排序")]),t._v(" "),s("h4",{attrs:{id:"_36-2-2-插入排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_36-2-2-插入排序"}},[t._v("#")]),t._v(" 36.2.2 插入排序")]),t._v(" "),s("h4",{attrs:{id:"_36-2-3-选择排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_36-2-3-选择排序"}},[t._v("#")]),t._v(" 36.2.3 选择排序")]),t._v(" "),s("h4",{attrs:{id:"_36-2-4-归并排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_36-2-4-归并排序"}},[t._v("#")]),t._v(" 36.2.4 归并排序")]),t._v(" "),s("h4",{attrs:{id:"_36-2-5-快排"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_36-2-5-快排"}},[t._v("#")]),t._v(" 36.2.5 快排")]),t._v(" "),s("h4",{attrs:{id:"_36-2-6-堆排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_36-2-6-堆排序"}},[t._v("#")]),t._v(" 36.2.6 堆排序")]),t._v(" "),s("h3",{attrs:{id:"_36-3-链表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_36-3-链表"}},[t._v("#")]),t._v(" 36.3 链表")]),t._v(" "),s("h3",{attrs:{id:"_36-4-树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_36-4-树"}},[t._v("#")]),t._v(" 36.4 树")]),t._v(" "),s("h3",{attrs:{id:"_36-5-动态规划"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_36-5-动态规划"}},[t._v("#")]),t._v(" 36.5 动态规划")]),t._v(" "),s("h2",{attrs:{id:"_37-css常考面试题解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_37-css常考面试题解析"}},[t._v("#")]),t._v(" 37 css常考面试题解析")])])}),[],!1,null,null,null);a.default=e.exports}}]);