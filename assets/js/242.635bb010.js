(window.webpackJsonp=window.webpackJsonp||[]).push([[242],{620:function(t,a,s){"use strict";s.r(a);var e=s(28),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"对webpack的理解-解决了什么问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对webpack的理解-解决了什么问题"}},[t._v("#")]),t._v(" 对webpack的理解？解决了什么问题？")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.vue-js.com/898ed570-a578-11eb-85f6-6fac77c0c9b3.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_1-webpack"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-webpack"}},[t._v("#")]),t._v(" 1. Webpack")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://juejin.im/post/6844903588607557639",target:"_blank",rel:"noopener noreferrer"}},[t._v("带你走进webpack世界，成为webpack头号玩家。"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.im/post/6844903853905674248",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于webpack4的14个知识点,童叟无欺"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("可以看做一个模块化打包机，分析项目结构，处理模块化依赖，转换成为浏览器可运行的代码。")]),t._v(" "),s("ul",[s("li",[t._v("代码转换: TypeScript 编译成 JavaScript、SCSS,LESS 编译成 CSS.")]),t._v(" "),s("li",[t._v("文件优化：压缩 JavaScript、CSS、HTML 代码，压缩合并图片。")]),t._v(" "),s("li",[t._v("代码分割：提取多个页面的公共代码、提取首屏不需要执行部分的代码让其异步加载。")]),t._v(" "),s("li",[t._v("模块合并：在采用模块化的项目里会有很多个模块和文件，需要构建功能把模块分类合并成一个文件。")]),t._v(" "),s("li",[t._v("自动刷新：监听本地源代码的变化，自动重新构建、刷新浏览器。")])]),t._v(" "),s("p",[t._v("构建把一系列前端代码自动化去处理复杂的流程，解放生产力。")]),t._v(" "),s("h4",{attrs:{id:"_1-1-webpack配置entry有几个"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-webpack配置entry有几个"}},[t._v("#")]),t._v(" 1.1 webpack配置entry有几个")]),t._v(" "),s("h4",{attrs:{id:"_1-2-webpack的构建流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-webpack的构建流程"}},[t._v("#")]),t._v(" 1.2 webpack的构建流程")]),t._v(" "),s("p",[t._v("webpack的构建流程包括compile、make、build、seal、emit阶段。")]),t._v(" "),s("ul",[s("li",[t._v("初始化参数: 从配置文件和 Shell 语句中读取与合并参数，得出最终的参数。")]),t._v(" "),s("li",[t._v("开始编译: 根据我们的webpack配置注册好对应的插件调用 compile.run 进入编译阶段,在编译的第一阶段是 compilation，他会注册好不同类型的module对应的 factory，不然后面碰到了就不知道如何处理了。")]),t._v(" "),s("li",[t._v("编译模块: 进入 make 阶段，会从 entry 开始进行两步操作：第一步是调用 loaders 对模块的原始代码进行编译，转换成标准的JS代码, 第二步是调用 acorn 对JS代码进行语法分析，然后收集其中的依赖关系。每个模块都会记录自己的依赖关系，从而形成一颗关系树。")]),t._v(" "),s("li",[t._v("输出资源：根据入口和模块之间的依赖关系，组装成一个个包含多个模块的 Chunk，再把每个 Chunk 转换成一个单独的文件加入到输出列表，这步是可以修改输出内容的最后机会。")]),t._v(" "),s("li",[t._v("输出完成：在确定好输出内容后，根据配置确定输出的路径和文件名，把文件内容写入到文件系统。")])]),t._v(" "),s("h4",{attrs:{id:"_1-3-webpack和rollup有什么相同和不同点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-webpack和rollup有什么相同和不同点"}},[t._v("#")]),t._v(" 1.3 webpack和rollup有什么相同和不同点？")]),t._v(" "),s("h4",{attrs:{id:"_1-4-介绍一下loader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-介绍一下loader"}},[t._v("#")]),t._v(" 1.4 介绍一下Loader")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/axuebin/articles/issues/38",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端工程师都得掌握的 webpack Loader"),s("OutboundLink")],1),t._v("\nLoader 的作用很简单，就是处理任意类型的文件，并且将它们转换成一个让 webpack 可以处理的有效模块。")]),t._v(" "),s("p",[t._v("常用的Loader有：js-"),s("code",[t._v("babel-loader")]),t._v("、css-"),s("code",[t._v("style-loader``css-loader")]),t._v("、``")]),t._v(" "),s("p",[t._v("Loader 可以在 webpack.config.js 里配置，也可以在 require 语句里内联；")]),t._v(" "),s("h5",{attrs:{id:"_1-4-1-在config里配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-1-在config里配置"}},[t._v("#")]),t._v(" 1.4.1 在config里配置")]),t._v(" "),s("p",[t._v("Loader 可以在 webpack.config.js里配置，这也是推荐的做法，定义在 module.rules 里。")]),t._v(" "),s("p",[t._v("每一条 rule 会包含两个属性：test 和 use，比如 { test: /.js$/, use: 'babel-loader' } 意思就是：当 webpack 遇到扩展名为 js 的文件时，先用 babel-loader 处理一下，然后再打包它。")]),t._v(" "),s("h5",{attrs:{id:"_1-4-2-loader-类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-2-loader-类型"}},[t._v("#")]),t._v(" 1.4.2 Loader 类型")]),t._v(" "),s("ol",[s("li",[t._v("同步Loader：this.callback()")]),t._v(" "),s("li",[t._v("异步Loader：this.async()")]),t._v(" "),s("li",[t._v("Pitching Loader：")]),t._v(" "),s("li",[t._v("Raw Loader：")])]),t._v(" "),s("h4",{attrs:{id:"_1-5-介绍一下plugin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-介绍一下plugin"}},[t._v("#")]),t._v(" 1.5 介绍一下Plugin")]),t._v(" "),s("p",[t._v("通过插件，扩展 webpack，加入自定义的构建行为，使 webpack 可以执行更广泛的任务，拥有更强的构建能力。")]),t._v(" "),s("h4",{attrs:{id:"_1-6-webpack-热更新是如何实现的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-webpack-热更新是如何实现的"}},[t._v("#")]),t._v(" 1.6 webpack 热更新是如何实现的？")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/post/6844904008432222215",target:"_blank",rel:"noopener noreferrer"}},[t._v("轻松理解webpack热更新原理"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Hot Module Replacement，简称HMR，无需完全刷新整个页面的同时，更新模块。HMR的好处，在日常开发工作中体会颇深：节省宝贵的开发时间、提升开发体验。")]),t._v(" "),s("ol",[s("li",[t._v("webpack-dev-server启动本地服务：我们根据webpack-dev-server的package.json中的bin命令，可以找到命令的入口文件bin/webpack-dev-server.js。")]),t._v(" "),s("li",[t._v("修改webpack.config.js的entry配置")]),t._v(" "),s("li",[t._v("监听webpack编译结束")]),t._v(" "),s("li",[t._v("webpack监听文件变化")]),t._v(" "),s("li",[t._v("浏览器接收到热更新的通知")]),t._v(" "),s("li",[t._v("HotModuleReplacementPlugin 或 --hot")]),t._v(" "),s("li",[t._v("moudle.hot.check 开始热更新")]),t._v(" "),s("li",[t._v("hotApply 热更新模块替换\n"),s("ul",[s("li",[t._v("删除过期的模块，就是需要替换的模块")]),t._v(" "),s("li",[t._v("将新的模块添加到 modules 中")]),t._v(" "),s("li",[t._v("通过__webpack_require__执行相关模块的代码")])])])]),t._v(" "),s("h4",{attrs:{id:"_1-7-webpack-层面如何做性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-webpack-层面如何做性能优化"}},[t._v("#")]),t._v(" 1.7 webpack 层面如何做性能优化")]),t._v(" "),s("h4",{attrs:{id:"_1-8-介绍一下-webpack-的-dll"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-8-介绍一下-webpack-的-dll"}},[t._v("#")]),t._v(" 1.8 介绍一下 webpack 的 dll")]),t._v(" "),s("p",[t._v("DLL动态链接")]),t._v(" "),s("p",[t._v("第三库不是经常更新，打包的时候希望分开打包，来提升打包速度。打包dll需要新建一个webpack配置文件，在打包dll的时候，webpack做一个索引，写在manifest文件中。然后打包项目文件时只需要读取manifest文件。")]),t._v(" "),s("h4",{attrs:{id:"_1-9-介绍一下-webpack-的-tree-shaking"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-9-介绍一下-webpack-的-tree-shaking"}},[t._v("#")]),t._v(" 1.9 介绍一下 webpack 的 tree-shaking")]),t._v(" "),s("p",[t._v("webpack 4 只需要配置mode为 "),s("code",[t._v("production")]),t._v("即可")]),t._v(" "),s("h2",{attrs:{id:"一、背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、背景"}},[t._v("#")]),t._v(" 一、背景")]),t._v(" "),s("p",[s("code",[t._v("Webpack")]),t._v(" 最初的目标是实现前端项目的模块化，旨在更高效地管理和维护项目中的每一个资源")]),t._v(" "),s("h4",{attrs:{id:"模块化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块化"}},[t._v("#")]),t._v(" 模块化")]),t._v(" "),s("p",[t._v("最早的时候，我们会通过文件划分的形式实现模块化，也就是将每个功能及其相关状态数据各自单独放到不同的"),s("code",[t._v("JS")]),t._v(" 文件中")]),t._v(" "),s("p",[t._v("约定每个文件是一个独立的模块，然后再将这些"),s("code",[t._v("js")]),t._v("文件引入到页面，一个"),s("code",[t._v("script")]),t._v("标签对应一个模块，然后调用模块化的成员")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("module-a.js"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}}),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("module-b.js"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}}),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("但这种模块弊端十分的明显，模块都是在全局中工作，大量模块成员污染了环境，模块与模块之间并没有依赖关系、维护困难、没有私有空间等问题")]),t._v(" "),s("p",[t._v("项目一旦变大，上述问题会尤其明显")]),t._v(" "),s("p",[t._v("随后，就出现了命名空间方式，规定每个模块只暴露一个全局对象，然后模块的内容都挂载到这个对象中")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("moduleA "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("method1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'moduleA#method1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这种方式也并没有解决第一种方式的依赖等问题")]),t._v(" "),s("p",[t._v("再后来，我们使用立即执行函数为模块提供私有空间，通过参数的形式作为依赖声明，如下")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// module-a.js")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module-a'")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("method1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#method1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'body'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("animate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" margin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'200px'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("moduleA "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    method1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" method1\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jQuery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("上述的方式都是早期解决模块的方式，但是仍然存在一些没有解决的问题。例如，我们是用过"),s("code",[t._v("script")]),t._v("标签在页面引入这些模块的，这些模块的加载并不受代码的控制，时间一久维护起来也十分的麻烦")]),t._v(" "),s("p",[t._v("理想的解决方式是，在页面中引入一个"),s("code",[t._v("JS")]),t._v("入口文件，其余用到的模块可以通过代码控制，按需加载进来")]),t._v(" "),s("p",[t._v("除了模块加载的问题以外，还需要规定模块化的规范，如今流行的则是"),s("code",[t._v("CommonJS")]),t._v("、"),s("code",[t._v("ES Modules")])]),t._v(" "),s("h2",{attrs:{id:"二、问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、问题"}},[t._v("#")]),t._v(" 二、问题")]),t._v(" "),s("p",[t._v("从后端渲染的"),s("code",[t._v("JSP")]),t._v("、"),s("code",[t._v("PHP")]),t._v("，到前端原生"),s("code",[t._v("JavaScript")]),t._v("，再到"),s("code",[t._v("jQuery")]),t._v("开发，再到目前的三大框架"),s("code",[t._v("Vue")]),t._v("、"),s("code",[t._v("React")]),t._v("、"),s("code",[t._v("Angular")])]),t._v(" "),s("p",[t._v("开发方式，也从"),s("code",[t._v("javascript")]),t._v("到后面的"),s("code",[t._v("es5")]),t._v("、"),s("code",[t._v("es6、7、8、9、10")]),t._v("，再到"),s("code",[t._v("typescript")]),t._v("，包括编写"),s("code",[t._v("CSS")]),t._v("的预处理器"),s("code",[t._v("less")]),t._v("、"),s("code",[t._v("scss")]),t._v("等")]),t._v(" "),s("p",[t._v("现代前端开发已经变得十分的复杂，所以我们开发过程中会遇到如下的问题：")]),t._v(" "),s("ul",[s("li",[t._v("需要通过模块化的方式来开发")]),t._v(" "),s("li",[t._v("使用一些高级的特性来加快我们的开发效率或者安全性，比如通过ES6+、TypeScript开发脚本逻辑，通过sass、less等方式来编写css样式代码")]),t._v(" "),s("li",[t._v("监听文件的变化来并且反映到浏览器上，提高开发的效率")]),t._v(" "),s("li",[t._v("JavaScript 代码需要模块化，HTML 和 CSS 这些资源文件也会面临需要被模块化的问题")]),t._v(" "),s("li",[t._v("开发完成后我们还需要将代码进行压缩、合并以及其他相关的优化")])]),t._v(" "),s("p",[t._v("而"),s("code",[t._v("webpack")]),t._v("恰巧可以解决以上问题")]),t._v(" "),s("h2",{attrs:{id:"三、是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、是什么"}},[t._v("#")]),t._v(" 三、是什么")]),t._v(" "),s("p",[s("code",[t._v("webpack")]),t._v(" 是一个用于现代"),s("code",[t._v("JavaScript")]),t._v("应用程序的静态模块打包工具")]),t._v(" "),s("ul",[s("li",[t._v("静态模块")])]),t._v(" "),s("p",[t._v("这里的静态模块指的是开发阶段，可以被 "),s("code",[t._v("webpack")]),t._v(" 直接引用的资源（可以直接被获取打包进"),s("code",[t._v("bundle.js")]),t._v("的资源）")]),t._v(" "),s("p",[t._v("当 "),s("code",[t._v("webpack")]),t._v("处理应用程序时，它会在内部构建一个依赖图，此依赖图对应映射到项目所需的每个模块（不再局限"),s("code",[t._v("js")]),t._v("文件），并生成一个或多个 "),s("code",[t._v("bundle")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.vue-js.com/9ce194a0-a578-11eb-85f6-6fac77c0c9b3.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"webpack的能力"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack的能力"}},[t._v("#")]),t._v(" "),s("code",[t._v("webpack")]),t._v("的能力")]),t._v(" "),s("p",[s("strong",[t._v("编译代码能力")]),t._v("，提高效率，解决浏览器兼容问题\n"),s("img",{attrs:{src:"https://static.vue-js.com/c5c2d360-a592-11eb-ab90-d9ae814b240d.png",alt:""}}),t._v(" "),s("strong",[t._v("模块整合能力")]),t._v("，提高性能，可维护性，解决浏览器频繁请求文件的问题\n"),s("img",{attrs:{src:"https://static.vue-js.com/d306d260-a592-11eb-ab90-d9ae814b240d.png",alt:""}}),t._v(" "),s("strong",[t._v("万物皆可模块能力")]),t._v("，项目维护性增强，支持不同种类的前端模块类型，统一的模块化方案，所有资源文件的加载都可以通过代码控制\n"),s("img",{attrs:{src:"https://static.vue-js.com/e3c5a040-a592-11eb-ab90-d9ae814b240d.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"参考文献"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://webpack.docschina.org/concepts/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://webpack.docschina.org/concepts/"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/267875652",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://zhuanlan.zhihu.com/p/267875652"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("strong",[s("a",{attrs:{href:"https://juejin.cn/post/6844903966849892359",target:"_blank",rel:"noopener noreferrer"}},[t._v("从 0 到 1 实现一款简易版 Webpack"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("strong",[s("a",{attrs:{href:"https://juejin.cn/post/6844904023791796237",target:"_blank",rel:"noopener noreferrer"}},[t._v("Webpack 设置环境变量的误区"),s("OutboundLink")],1)])])])])}),[],!1,null,null,null);a.default=r.exports}}]);